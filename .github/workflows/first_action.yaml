name: First CICD
on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
    GITHUB_RUN_ID: ${{github.run_id}}
    GITHUB_RUN_NUMBER: ${{github.run_number}}
    GITHUB_ACTOR: ${{github.actor}}
    GITHUB_WORKFLOW: ${{github.workflow}}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install dependencies
        run: |
            npm install -g express-generator
            npm install express 
            npm install
            npm install --save-dev jest supertest

      - name: Run linter
        id: linter
        uses: super-linter/super-linter@v6.6.0
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_HTML: true

      - name: Run build
        id: build
        continue-on-error: true
        run: npm run build --if-present
        
      - name: Run test
        id: test
        continue-on-error: true
        run: npm run test

      - name: Archive Artifact
        id: archive_artifact
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: hello-artifact
          path: | 
            *
            !.**
            !node_modules
          retention-days: 1

      - name: update Comment on PR
        run: |
            echo "linter output: ${{ toJson(steps.linter) }}";
            echo "test output: ${{ toJson(steps.test)}}";
            echo "build output: ${{ toJson(steps.build)}}";
            echo "artifact output: ${{ toJson(steps.archive_artifact) }}";
            echo "Welcome, new contributor!";
            echo "Run ID: $GITHUB_RUN_ID";
            echo "Run NUmber: $GITHUB_RUN_NUMBER";
            echo "Actor: $GITHUB_ACTOR";
            echo "Workflow: $GITHUB_WORKFLOW";  

      #       # await github.rest.issues.createComment({
      #       #   issue_number: context.issue.number, //PR ID 
      #       #   owner: context.repo.owner,
      #       #   repo: context.repo.repo,
      #       #   body: body
      #       # })


